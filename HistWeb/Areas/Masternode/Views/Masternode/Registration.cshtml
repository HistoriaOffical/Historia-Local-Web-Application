@{
    ViewData["Title"] = "Masternodes";
}

@section Styles {

    <style>

        input[type=checkbox] {
            /* Double-sized Checkboxes */
            -ms-transform: scale(2); /* IE */
            -moz-transform: scale(2); /* FF */
            -webkit-transform: scale(2); /* Safari and Chrome */
            -o-transform: scale(2); /* Opera */
            padding: 10px;
        }
    </style>
}


<div id="MNS" style="display:none">

    <form id="createForm" class="needs-validation" style="margin-top:20px" novalidate enctype="multipart/form-data">
        <div class="text-center">
            <div class="card mt-4">
                <div class="card-header">
                    <h3>Add New Masternode or Voting Node</h3>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-6">
                            <div class="form-group" style="text-align:left">
                                <label class="col-form-label" for="tbMasterNodeName">Identity: <span style="color:#f00">*</span> </label>
                                <input class="form-control" id="tbMasterNodeName" type="text" placeholder="" required maxlength="10" />
                                <div class="invalid-feedback">Please enter the node identity.</div><br />
                                <label class="col-form-label" for="tbPaymentAddress">Collateral Transaction Hash (with 100 or 5000 HTA, 64 characters in length): <span style="color:#f00">*</span> </label>
                                <input class="form-control" id="tbPaymentAddress" type="text" placeholder="Transaction Hash" required maxlength="64"/>
                                <div class="invalid-feedback">Please enter the Collateral Transaction Hash.</div><br />
                                <label class="col-form-label" for="tbCollateralIndex">Collateral Index (eg 0 or 1): <span style="color:#f00">*</span> </label>
                                <input class="form-control" id="tbCollateralIndex" type="text" style="width:100px" placeholder="" required />
                                <div class="invalid-feedback">Please enter the Collateral Index.</div>
                                <br />
                                <a href="https://docs.historia.network/en/latest/governance/basex.html" class="btn btn-secondary float-left" role="button"  target="_blank" aria-pressed="true">How to use this?</a>
                                <button name="submitRecord" id="submitRecord" class="btn btn-secondary float-right">Register</button>
                            </div>
                        </div>
                        <div class="col-6 float-right">
                            <div class="card" style="text-align:left">
                                <div class="card-body" style="padding-bottom: 50px;">
                                    <h4>For Advanced Users:</h4>
                                    <p>If you would like to vote without a subscription you can setup your own masternode or voting node. Please see the technical documentation site:</p>
                                    <ul>
                                        <li><a href="https://docs.historia.network/en/latest/votingnodes/index.html" style="text-decoration:underline" target="_blank">Voting Node Setup</a> - 100 HTA Required</li>
                                        <li><a href="https://docs.historia.network/en/latest/masternodes/index.html" style="text-decoration:underline" target="_blank">Masternode Setup</a> - 5000 HTA Required</li>


                                    </ul>
                                    <p>A passphrase will be used to encrypt your node information, so nobody can change your vote. If you have multiple nodes, it is required to use the same passphrase for each node to ensure votes are properly processed. Because this app does not store your passphrase, to change your passphrase you will have to delete node information and submit it again.</p>
                                </div>
                                <br />
                            </div>
                        </div>
                    </div>


                </div>
            </div>
        </div>
    </form>

    <form id="myMasternodesForm" class="needs-validation" style="margin-top:20px " novalidate enctype="multipart/form-data">
        <div id="mnt" class="text-center" style="display:none">
            <div class="card">
                <div class="card-header">
                    <h3>My Masternodes or Voting Nodes</h3>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-12">
                            <table class="table table-striped my-4 w-100" id="myMasternodesTable">
                                <thead>
                                    <tr>
                                        <th>Id</th>
                                        <th>Add Voting Key</th>
                                        <th>Collateral Hash</th>
                                        <th>Collateral Index</th>
                                        <th></th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>
<br />
<br />



<div class="modal fade" role="dialog" id="updateModal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <form id="formUpdate" class="needs-validation" role="form" novalidate>
                <input type="hidden" id="hdnCurrentRow" />
                <div class="modal-header">
                    <h5 class="modal-title">Update Private Key</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    <div class="row">
                        <div class="col">
                            <div class="form-group">
                                <label class="col-form-label" for="tbPassphrase">Passphrase: <span style="color:#f00">*</span> </label>
                                <input class="form-control" id="tbPassphrase" type="password" placeholder="" required />
                                <div class="invalid-feedback">Please enter your passphrase.</div>
                            </div>
                            <div class="form-group">
                                <label class="col-form-label" for="tbPrivKey">Voting Address Private Key: <span style="color:#f00">*</span> </label>
                                <input class="form-control" id="tbPrivKey" type="text" placeholder="" required />
                                <div class="invalid-feedback">Please enter your voting address private key.</div>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
            <div class="modal-footer">
                <button id="updatePrivKeyData" name="updatePrivKeyData" class="btn btn-secondary" type="submit">Update</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="/lib/cryptojs/crypto-js.min.js"></script>
    <script type="text/javascript">

    function escapeSpecialChars(str) {
        return str.toString().replace(/\\n/g, "\\n")
            .replace(/\\'/g, "\\'")
            .replace(/\\"/g, '\\"')
            .replace(/\\&/g, "\\&")
            .replace(/\\r/g, "\\r")
            .replace(/\\t/g, "\\t")
            .replace(/\\b/g, "\\b")
            .replace(/\\f/g, "\\f");
    }

    function deleteMasternode(id)
    {
        if (confirm('Are you sure you want to remove this masternode?')) {
            $.get('@Url.Action("DeleteRegisteredMasternode", "Masternode")?id=' + id, null, function (data) {
                fillMasternodes();
            });
        }
    }

    function UpdateNode(id)
    {
        $('#updateModal').appendTo("body").modal('show');
        $('#hdnCurrentRow').val(id);
        if ($("updateModal").is(":visible")) {
            $("updateModal")
                .css('opacity', 0)
                .slideUp('fast')
                .animate(
                    { opacity: 1 },
                    { queue: false, duration: 'fast' }
                );
        } else {
            $("updateModal")
                .css('opacity', 0)
                .slideDown('fast')
                .animate(
                    { opacity: 1 },
                    { queue: false, duration: 'fast' }
                );
        }
    }

    function fillMasternodes()
    {
        $.get('@Url.Action("GetMyMasternodes", "Masternode")', null, function (data) {
            myMasternodesTable = $('#myMasternodesTable').DataTable({
                data: data,
                destroy: true,
                info: false,
                fixedHeader: false,
                lengthChange: false,
                autoWidth: false,
                responsive: true,
                searching: false,
                columns: [
                    {
                        data: "id",
                        visible: false
                    },
                    {
                        data: "privateKey",
                        render: function (data, type, full, meta)
                        {
                            return '<input type="button" name="updatePrivKey" id="updatePrivKey_' + full.id + '" class="btn btn-secondary" style="width:100px" value="Update" onClick="UpdateNode(' + full.id + ');"></input>';
                          }
                    },
                    { data: "collateralHash" },
                    { data: "collateralIndex" },
                    {
                        data: null,
                        render: function (data, type, full, meta) {
                            return '<input type="button" id="delete" class="btn btn-secondary" style="width:100px" value="Delete" onClick="deleteMasternode(' + full.id +');"></input>';
                        }
                    },
                ],
            });

            var table = $('#myMasternodesTable').DataTable();
            var totalRowCount = table.data().count();
            if (totalRowCount != 0) {
                $("#mnt").show();
            } else {
                $("#mnt").hide();
            }

        });
    }

    $(document).ready(function () {
        $('#MNS').show();
        fillMasternodes();
        $('#updatePrivKeyData').off().on('click', function (evt) {
            evt.stopPropagation();
            evt.preventDefault();
            var form = $('#formUpdate');
            if (form[0].checkValidity() === false) {
                form.addClass('was-validated');
                Swal.fire({
                    title: 'Error!',
                    text: 'Please check all fields and try again',
                    type: 'error',
                    confirmButtonText: 'Ok'
                });
                return false;
            }

            form.removeClass('was-validated');
            var count = myMasternodesTable.rows().count();
            var current = 0;

            var id = $('#hdnCurrentRow').val();
            var privKey = $('#tbPrivKey').val();
            var encrypted = CryptoJS.AES.encrypt(privKey, $('#tbPassphrase').val());
            var request = { "Id": id, "PrivateKey": escapeSpecialChars(encrypted) };
            $('#tbMasternodePrivKey_' + id).val('');

            $.ajax({
                url: '@Url.Action("StoreEncryptedPrivateKeys", "Masternode")',
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(request)
            }).done(function (result) {

                $('#tbPassphrase').val('');
                $('#tbPrivKey').val('');
                $('#updateModal').modal('hide');
                Swal.fire({
                    title: 'Update Complete!',
                    text: 'Your node private keys have been successfully encrypted and stored!',
                    type: 'success',
                    confirmButtonText: 'Ok'
                });
                $.get('@Url.Action("GetMyMasternodes", "Masternode")', null, function (data) {
                    myMasternodesTable.clear().rows.add(data).draw();
                });
                
            });

            return false;
        });

        $('#submitRecord').off().on('click', function (evt) {
            evt.stopPropagation();
            evt.preventDefault();

            var form = $('#createForm');

            if (form[0].checkValidity() === false) {
                form.addClass('was-validated');
                swal('Error', 'Please check all fields and try again', 'error');
                return false;
            }
            form.removeClass('was-validated');

            var masternodeName = $('#tbMasterNodeName').val();
            var collateralHash = $('#tbPaymentAddress').val();
            var collateralIndex = $('#tbCollateralIndex').val();
            var request = { "Name": masternodeName, "CollateralHash": collateralHash, "PrivateKey": "", "Notify": "true", "CollateralIndex": collateralIndex};
            $.ajax({
                url: '@Url.Action("AddUpdateMasternodeRegistration", "Masternode")',
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(request)
            }).done(function (result) {
                $('#tbMasterNodeName').val('');
                $('#tbPaymentAddress').val('');
                $('#tbCollateralIndex').val('');
                $("#mnt").show();
                Swal.fire({
                    title: 'Registration Complete!',
                    text: 'Your node has been successfully registered!',
                    type: 'success',
                    confirmButtonText: 'Ok'
                });
                $.get('@Url.Action("GetMyMasternodes", "Masternode")', null, function (data) {

                    myMasternodesTable.clear().rows.add(data).draw();
                });
                $('#submitRecord').attr("disabled", true);
                $('#submitRecord').addClass('disabled');

            });
            return false;
        });
    });

    </script>
}
