@model HistWeb.Home.Models.HomeViewModel;
@using HistWeb.Helpers

@{
    ViewData["Title"] = "Historia";
}

@section Styles
{
    <style>

        /* selected btn css */
        .btn-group-toggle .btn:not(:disabled):not(.disabled).active, .btn-group-toggle .btn:not(:disabled):not(.disabled):active, .show > .btn.dropdown-toggle {
            color: #fff;
            background-color: #2196F3;
            border-color: #2196F3;
        }

        /* non selected btn css */
        .btn-group-toggle .btn {
            color: #fff;
            background-color: #b7b7b7;
            border-color: #6c757d;
        }

        .popover {
            max-width: 760px !important;
        }

        .card-vertical {
            display: none;
        }

            .card-vertical > img {
                width: 100%;
            }

        .card-horizontal {
            display: flex;
            flex: 1 1 auto;
        }

        @@media screen and (max-width: 700px) {
            .card-vertical {
                display: block;
            }

            .card-horizontal {
                display: none;
            }
        }

        @@supports (-moz-appearance:none) {
            iframe {
                border: 2px solid rgb(218, 218, 218);
                height: auto !important;
            }
        }
    </style>
}

<div class="text-center">
    <div class="card-body">
        <div class="row">
            <div class="col-12">
                <ul id="tabsJustified" class="nav nav-tabs" style="background:#fff">
                    <li class="nav-item"><a href="#all" data-target="#all" data-toggle="tab" role="tab" class="nav-link small text-uppercase active tab-select" onclick="selectedType = 'all'; clearRecords(); lazyLoadAll(selectedType, 0);">All</a></li>
                    <li class="nav-item"><a href="#proposals" data-target="#proposals" data-toggle="tab" role="tab" class="nav-link small text-uppercase tab-select" onclick="selectedType = 'proposals'; clearRecords(); lazyLoadAll(selectedType, 0);">Proposals</a></li>
                    <li class="nav-item"><a href="#records" data-target="#records" data-toggle="tab" role="tab" class="nav-link small text-uppercase tab-select" onclick="selectedType = 'records'; clearRecords(); lazyLoadAll(selectedType, 0);">Records</a></li>
                    <li class="nav-item" id="searchTab" style="display:none"><a href="#search" data-target="#search" data-toggle="tab" role="tab" class="nav-link small text-uppercase tab-close" onclick="">Search<i class="fa fa-times" style="margin-left: 5px;"></i></a></li>

                </ul>
                <div class="tab-content">
                    <div id="all" class="tab-pane fade show active">
                        <div id="allloadingdiv" style="text-align:center;margin-bottom:20px;">
                            Loading...
                        </div>
                        <div id="allRecordsContainer">
                        </div>
                        <div class="row mt-4" id="allRecordsNoRecordMsg" style="display:none">
                            <div class="col-12 mx-auto">
                                <h4>Is Historia Core Client Setup and Running?</h4>
                            </div>
                        </div>
                    </div>

                    <div id="proposals" class="tab-pane fade show">
                        <div id="proposalloadingdiv" style="text-align:center;margin-bottom:20px;">
                            Loading...
                        </div>
                        <div id="proposalsContainer">
                        </div>
                        <div class="row mt-4" id="proposalsNoRecordMsg" style="display:none">
                            <div class="col-12 mx-auto">
                                <h4>Either Historia client has not synced or there are no proposals up for vote</h4>
                            </div>
                        </div>
                    </div>
                    <div id="records" class="tab-pane fade show">
                        <div id="recordsloadingdiv" style="text-align:center;margin-bottom:20px;">
                            Loading...
                        </div>
                        <div id="recordsContainer">
                        </div>
                        <div class="row mt-4" id="recordsNoRecordMsg" style="display:none">
                            <div class="col-12 mx-auto">
                                <h4>Either Historia client has not synced or there are no records up for vote</h4>
                            </div>
                        </div>
                    </div>
                    <div id="search" class="tab-pane fade">
                        <div id="searchloadingdiv" style="text-align:center;margin-bottom:20px;">
                            Loading...
                        </div>
                        <div id="searchContainer">
                        </div>
                        <div class="row mt-4" id="searchNoRecordMsg">
                            <div class="col-12 mx-auto">
                                <h4>No search results found</h4>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <br /><br />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div id="recordTemplate" class="record" style="display:none">
    <div class="listing-container position-relative">
        <div class="title text-left">
            <span id="recordType" class="ml-0" style="vertical-align:middle;"></span>

            <input type="hidden" id="timetemp_" value="">
            <h5 class="card-title" style="display: inline-block;"><a id="proposalName" href="/Proposals/Proposals/ProposalDetails?hash="></a></h5>
            <span id="recordTime" style="line-height: normal;" class="ml-0"></span>&nbsp;<br />
        </div>

        <div class="w-clearfix text-left" style="transform: rotate(0);">
            <p id="proposalSummary" class="card-text">ProposalSummary</p>
            <span id="ogcardid" contenteditable="false" class="og" style="display:none">
                <div id="ogcard" class="card">
                    <div class="card-horizontal">
                        <img id="oglinksimageurl" class="" style="width: 250px; height:auto; object-fit: cover" src="">
                        <div class="card-body">
                            <h4 id="oglinkstitle" class="card-title"></h4>
                            <p id="oglinksdescription" class="card-text"></p>
                            <i class="fas fa-link"> </i>
                            <a id="oglinksurl" href='' target='_blank' class='stretched-link'></a>
                        </div>
                    </div>
                    <div class='card-vertical'>
                        <img id="oglinksimageurl" class='' style="width: 100%; height:auto; object-fit: cover" src=''>
                        <div class='card-body'>
                            <h4 id="oglinkstitle" class='card-title'></h4>
                            <p id="oglinksdescription" class='card-text'></p>
                            <i class='fas fa-link'> </i>
                            <a id="oglinksurl" href='' target='_blank' class='stretched-link'></a>
                        </div>
                    </div>
                </div>
            </span>
        </div>

        <div style="margin-top:20px; margin-bottom:10px;">
            <div class="voting">
                <div class="votingwrapper">
                    <p id="pastVotingCycle"></p>
                </div>
                <div class="votingwrapper" style="margin-top:30px">
                    <div id="votingSection" class="votingwrappermain" style="display:none">
                        <div class="votingdown">VOTING</div>
                        <a href="#">
                            <img id="btnVoteYes" src="/images/up_arrow_small.svg" alt="" class="image-3" style="cursor: pointer;" data-toggle="popover" title="" data-placement="top">
                        </a>
                        <div id="yesCount" class="votingdown"></div>
                        <a href="#">
                            <img id="btnVoteNo" src="/images/down_arrow_small.svg" alt="" class="image-7" style="cursor: pointer;" data-toggle="popover" title="" data-placement="top">
                        </a>
                        <div id="noCount" class="votingdown"></div>
                        <a href="#">
                            <img id="btnVoteAbstain" src="/images/vote_null.svg" alt="" class="image-3" style="cursor: pointer;" width="20px" data-toggle="popover" title="" data-placement="top">
                        </a>
                        <div id="abstainCount" class="votingdown"></div>
                        <a id="proposalNameVote" href="/Proposals/Proposals/ProposalDetails?hash=" class="stretched-link"></a>
                    </div>
                </div>

                <div class="votingwrapper" style="margin-top:30px">
                    <span id="expired" class="ml-0"></span>
                </div>
            </div>
            <div class="usertabs">
                <div class="socialmain">
                </div>
            </div>
        </div>
        <hr />
    </div>
</div>



@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.js"></script>
    <script src="/lib/cryptojs/crypto-js.min.js"></script>
    <script src="/lib/jsrassign/jsrsasign-all-min.js"></script>

    <script type="text/javascript">
        let pageIndex = 0;

        function hex2a(hexx) {
            var hex = hexx.toString();//force conversion
            var str = '';
            for (var i = 0; (i < hex.length && hex.substr(i, 2) !== '00'); i += 2)
                str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));
            return str;
        }

        function getRandomInt(min, max) {
            return Math.floor(Math.random() * (max - min + 1) + min);
        }


        //TODO: Move this into a separate file
        function lazyLoadAll(type, pageIndex, sq) {
            if (typeof sq === 'undefined' || sq === "") {

                sq = "";

            } else {
                $('#searchContainer').empty();
                type = "search";
                $('a[href="#search"]').tab('show');
                $("#searchTab").show();
                $("#allTab").removeClass("active");
                $("#proposalsTab").removeClass("active");
                $("#recordsTab").removeClass("active");
                $("#all").removeClass("active");
                $("#proposals").removeClass("active");
                $("#records").removeClass("active");
                $('#search').show;
                $('#search').addClass("show active");
                $("#searchContainer").show();

            }

            $("#allloadingdiv").show();
            $("#proposalloadingdiv").show();
            $("#recordsloadingdiv").show();
            $("#searchloadingdiv").show();
            $.ajax({
                type: 'GET',
                url: '/Home/LoadRecords',
                contentType: 'application/json; charset=utf-8',
                data: { recordType: type, pageIndex: pageIndex, query: sq },
                dataType: 'json',
                success: function (result, status, xhr) {

                    pageindex = pageIndex + 1;
                    result.records && result.records.length > 0 && result.records.map((record, idx) => {

                        let template = $('#recordTemplate').clone().show();
                        template.attr('id', `record_${record.hash}`);

                        template.find('#proposedByUserName').text(record.proposedByUserName);
                        template.find('#proposalSummary').text(record.proposalSummary);
                        template.find('#proposalName').text(record.proposalName);

                        if (record.oglinksid != "0") {

                            template.find('#ogcardid').show();
                            template.find('#oglinksimageurl').attr("src", record.oglinksimageurl);
                            template.find('#oglinkstitle').text(record.oglinkstitle);
                            template.find('#oglinksdescription').text(record.oglinksdescription);
                            template.find('#oglinksurl').text(record.oglinkssitename);
                            template.find('#oglinksurl').attr("href", record.oglinksurl)
                            template.find('#ogcardid').attr("class", "og_" + record.ogcardid)

                        }

                        template.find('#recordTime').attr('id', `recordTime_${record.hash}`);
                        template.find(`#recordTime_${record.hash}`).attr('class', `time_${record.hash}`);
                        localUTCDateC(template.find(`#recordTime_${record.hash}`), record.proposalDate);

                        template.find('#proposalName').attr('href', `/Proposals/Proposals/ProposalDetails?hash=${record.hash}&id=`);
                        template.find('#proposalNameVote').attr('href', `/Proposals/Proposals/ProposalDetails?hash=${record.hash}&id=`);


                        if (record.type === '1') {
                            template.find('#recordType').html('<span class="ml-0" style="vertical-align:middle;"><button type="button" class="btn btn-outline-dark float-right btn-sm" id="btnPro">Proposal</button></span>');
                        }
                        else if (record.type === '4') {
                            if (record.isUpdate === "1") {
                                if (record.pastSuperBlock === 0) {
                                    if (record.cidtype === "1") {
                                        template.find('#recordType').html('<span class="ml-0" style="vertical-align:middle;"><button type="button" id="btnSEU" class="btn btn-outline-dark float-right btn-sm">Suggested Evidence Update</button></span>');

                                    } else if (record.cidtype === "2") {
                                        template.find('#recordType').html('<span class="ml-0" style="vertical-align:middle;"><button type="button" class="btn btn-outline-dark float-right btn-sm" id="btnSTU">Suggested Topic Update</button></span>');
                                    } else {
                                        template.find('#recordType').html('<span class="ml-0" style="vertical-align:middle;"><button type="button" class="btn btn-outline-dark float-right btn-sm" id="btnSRU">Suggested Record Update</button></span>');
                                    }
                                } else {
                                    if (record.cidtype === "1") {
                                        template.find('#recordType').html('<span class="ml-0" style="vertical-align:middle;"><button type="button" id="btnSEU" class="btn btn-outline-dark float-right btn-sm">Evidence Update</button></span>');
                                    } else if (record.cidtype === "2") {
                                        template.find('#recordType').html('<span class="ml-0" style="vertical-align:middle;"><button type="button" class="btn btn-outline-dark float-right btn-sm" id="btnSTU">Topic Update</button></span>');
                                    } else {
                                        template.find('#recordType').html('<span class="ml-0" style="vertical-align:middle;"><button type="button" class="btn btn-outline-dark float-right btn-sm" id="btnSRU">Record Update</button></span>');
                                    }
                                }
                            } else {
                                template.find('#recordType').html('<span class="ml-0" style="vertical-align:middle;"><button type="button" class="btn btn-outline-dark float-right btn-sm" id="btnRec">Record</button></span>');
                            }
                        }
                        else if (record.type === '5') {
                            if (record.isUpdate === "1") {
                                if (record.pastSuperBlock === 0) {
                                    if (record.cidtype === "1") {
                                        template.find('#recordType').html('<span class="ml-0" style="vertical-align:middle;"><button type="button" class="btn btn-outline-dark float-right btn-sm" id="btnSEU">Suggested Evidence Update</button></span>');

                                    } else if (record.cidtype === "2") {
                                        template.find('#recordType').html('<span class="ml-0" style="vertical-align:middle;"><button type="button" class="btn btn-outline-dark float-right btn-sm" id="btnSTU">Suggested Topic Update</button></span>');
                                    } else {
                                        template.find('#recordType').html('<span class="ml-0" style="vertical-align:middle;"><button type="button" class="btn btn-outline-dark float-right btn-sm" id="btnSRU">Suggested Update</button></span>');
                                    }
                                } else {
                                    if (record.cidtype === "1") {
                                        template.find('#recordType').html('<span class="ml-0" style="vertical-align:middle;"><button type="button" class="btn btn-outline-dark float-right btn-sm" id="btnSEU">Evidence Update</button></span>');
                                    } else if (record.cidtype === "2") {
                                        template.find('#recordType').html('<span class="ml-0" style="vertical-align:middle;"><button type="button" class="btn btn-outline-dark float-right btn-sm" id="btnSTU">Topic Update</button></span>');
                                    } else {
                                        template.find('#recordType').html('<span class="ml-0" style="vertical-align:middle;"><button type="button" class="btn btn-outline-dark float-right btn-sm" id="btnSRU">Update</button></span>');
                                    }
                                }

                            } else {
                                template.find('#recordType').html('<span class="ml-0" style="vertical-align:middle;"><button type="button" class="btn btn-outline-dark float-right btn-sm" id="btnArc">Archive</button></span>');
                            }
                        }

                        template.find('#btnSEU').on('click', function () {
                            Swal.fire({
                                title: 'What is Suggested Evidence Update?',
                                type: 'alert',
                                html: "Suggested Evidence Update is a new record, that is supporting or opposing the original record.<br><br>Learn more <a href='/Home/HowTo' style='text-decoration: underline;'>here</a>",
                                confirmButtonText: 'Ok'
                            });
                        });

                        template.find('#btnSTU').on('click', function () {
                            Swal.fire({
                                title: 'What is Suggested Topic Update?',
                                type: 'alert',
                                html: "Suggested Topic Update is a new record, that adding a topic to the original record.<br><br>Learn more <a href='/Home/HowTo' style='text-decoration: underline;'>here</a>",
                                confirmButtonText: 'Ok'
                            });
                        });

                        template.find('#btnSRU').on('click', function () {
                            Swal.fire({
                                title: 'What is Suggested Record Update?',
                                type: 'alert',
                                html: "Suggested Record Update is a new record, to suggest an edit to a original record.<br><br>Learn more <a href='/Home/HowTo' style='text-decoration: underline;'>here</a>",
                                confirmButtonText: 'Ok'
                            });
                        });

                        template.find('#btnPro').on('click', function () {
                            Swal.fire({
                                title: 'What is a Proposal?',
                                type: 'alert',
                                confirmButtonColor: "#545B62",
                                html: "A proposal is a temporary object that lets voters decide the direction of the Historia Network blockchain. <br><br>Learn more <a href='/Home/HowTo' style='text-decoration: underline;'>here</a>",
                                confirmButtonText: 'Ok'
                            });
                        });

                        template.find('#btnRec').on('click', function () {
                            Swal.fire({
                                title: 'What is Record?',
                                type: 'alert',
                                confirmButtonColor: "#545B62",
                                html: "A record is a object that if the voters approve, then will be a permanently added to the Historia Network blockchain.<br><br>Learn more <a href='/Home/HowTo' style='text-decoration: underline;'>here</a>",
                                confirmButtonText: 'Ok'
                            });
                        });

                        template.find('#btnArc').on('click', function () {
                            Swal.fire({
                                title: 'What is a Archive?',
                                type: 'alert',
                                confirmButtonColor: "#545B62",
                                html: "An Archive is similar to a record, but is used to archive a web page at the current point in time.<br><br>Learn more <a href='/Home/HowTo' style='text-decoration: underline;'>here</a>",
                                confirmButtonText: 'Ok'
                            });
                        });

                        if (record.pastSuperBlock === 0) {
                            // if (record.voting) {
                            template.find('#votingSection').show();

                            template.find('#yesCount').text(record.yesCount);
                            template.find('#noCount').text(record.noCount);
                            template.find('#abstainCount').text(record.abstainCount);
                            // }
                        }
                        else {
                            if (record.type === '4') {
                                if (record.cachedLocked) {
                                    template.find('#pastVotingCycle').text('Past Voting Cycle');
                                }
                                else {
                                    template.find('#pastVotingCycle').text('Past Voting Cycle');
                                }
                            }
                            else {
                                if (record.cachedLocked) {
                                    template.find('#pastVotingCycle').text('Past Voting Cycle');
                                }
                                else {
                                    template.find('#pastVotingCycle').text('Past Voting Cycle');
                                }
                            }
                        }

                        if (type === 'all') {
                            if ($('#allRecordsContainer').find(`#record_${record.hash}`).length === 0)
                                $("#allRecordsContainer").append(template);
                        }
                        else if (type === 'proposals') {
                            if ($('#proposalsContainer').find(`#record_${record.hash}`).length === 0)
                                $("#proposalsContainer").append(template);
                        }
                        else if (type === 'records') {
                            if ($('#recordsContainer').find(`#record_${record.hash}`).length === 0)
                                $("#recordsContainer").append(template);
                        } else if (type === 'search') {
                            if ($('#searchContainer').find(`#record_${record.id}`).length === 0)
                                $("#searchContainer").append(template);

                        }
                    });

                    if (result.records && result.records.length > 0) {
                        if (type === 'all') {
                            $('#allRecordsNoRecordMsg').hide();
                        }
                        else if (type === 'proposals') {
                            $('#proposalsNoRecordMsg').hide();
                        }
                        else if (type === 'records') {
                            $('#recordsNoRecordMsg').hide();
                        }
                        else if (type === 'search') {
                            $('#searchNoRecordMsg').hide();
                        }
                    }
                    else {
                        if (type === 'all' && $("#allRecordsContainer").children().length === 0) {
                            $('#allRecordsNoRecordMsg').show();
                        }
                        else if (type === 'proposals' && $("#proposalsContainer").children().length === 0) {
                            $('#proposalsNoRecordMsg').show();
                        }
                        else if (type === 'records' && $("#recordsContainer").children().length === 0) {
                            $('#recordsNoRecordMsg').show();
                        }
                        else if (type === 'search' && $("#searchContainer").children().length === 0) {
                            $("#SearchNoRecordMsg").show();
                            $('a[href="#search"]').tab('show');
                            $("#searchTab").show();
                            $("#allTab").removeClass("active");
                            $("#proposalsTab").removeClass("active");
                            $("#recordsTab").removeClass("active");
                            $("#all").removeClass("active");
                            $("#proposals").removeClass("active");
                            $("#records").removeClass("active");
                            $('#search').show;
                            $('#search').addClass("show active");
                            $('#searchNoRecordMsg').addClass("show active");

                        }
                    }

                    $("#allloadingdiv").hide();
                    $("#proposalloadingdiv").hide();
                    $("#recordsloadingdiv").hide();
                    $("#searchloadingdiv").hide();
                    inProgress = false;
                },

                error: function (xhr, status, error) {

                }
            });
        }





        function localUTCDateC(id, submittedAt) {
            const now = new Date();
            const submitted = new Date(submittedAt);

            const userTimezoneOffset = submitted.getTimezoneOffset(); // get user's timezone offset in minutes
            const timezoneOffsetMs = userTimezoneOffset * 60 * 1000; // convert minutes to milliseconds
            const adjustedSubmitted = new Date(submitted.getTime() + timezoneOffsetMs);

            const elapsed = now.getTime() - adjustedSubmitted.getTime(); // elapsed time in milliseconds

            const elapsedSeconds = Math.floor(elapsed / 1000);
            const elapsedMinutes = Math.floor(elapsed / (1000 * 60));
            const elapsedHours = Math.floor(elapsed / (1000 * 60 * 60));
            const elapsedDays = Math.floor(elapsed / (1000 * 60 * 60 * 24));
            const elapsedWeeks = Math.floor(elapsed / (1000 * 60 * 60 * 24 * 7));

            const currentYear = now.getFullYear();
            const currentMonth = now.getMonth();
            const currentDay = now.getDate();
            const submittedYear = adjustedSubmitted.getFullYear();
            const submittedMonth = adjustedSubmitted.getMonth();
            const submittedDay = adjustedSubmitted.getDate();

            let elapsedMonths = (currentYear - submittedYear) * 12;
            elapsedMonths -= submittedMonth;
            elapsedMonths += currentMonth;
            elapsedMonths = elapsedMonths <= 0 ? 0 : elapsedMonths;

            if (elapsedSeconds < 60) {
                $(id).text(" — " + `${elapsedSeconds} seconds ago`);
            } else if (elapsedMinutes < 60) {
                $(id).text(" — " + `${elapsedMinutes} minutes ago`);
            } else if (elapsedHours < 24) {
                $(id).text(" — " + `${elapsedHours} hours ago`);
            } else if (elapsedHours > 24 && elapsedHours < 48) {
                $(id).text(" — " + `1 day ago`);
            } else if (elapsedDays < 7) {
                $(id).text(" — " + `${elapsedDays} days ago`);
            } else if (elapsedWeeks < 4) {
                $(id).text(" — " + `${elapsedWeeks} weeks ago`);
            } else if (elapsedMonths < 1 && elapsedMonths > 2) {
                $(id).text(" — " + '1 month ago');
            } else if (elapsedMonths < 2 && elapsedMonths > 3) {
                $(id).text(" — " + '2 months ago');
            } else if (elapsedMonths < 3 && elapsedMonths > 4) {
                $(id).text(" — " + '3 months ago');
            } else {
                const options = { weekday: 'short', year: 'numeric', month: 'short', day: 'numeric' };
                $(id).text(" — " + adjustedSubmitted.toLocaleDateString(undefined, options));
            }
        }

        let selectedType = 'all';

        $(document).ready(function () {
            let inProgress = false;
            var parameters = {};
            var queryR = "";
            var query = "";
            $.each(window.location.search.substr(1).split('&'), function (index, value) {
                var parameter = value.split('=');
                var name = decodeURIComponent(parameter[0]);
                var value = decodeURIComponent(parameter[1]);
                parameters[name] = value;
                queryR = parameters['q'];
            });


            $(window).on("scroll", function () {
                var docHeight = $(document).height();
                var winScrolled = $(window).height() + $(window).scrollTop();
                if ((docHeight - winScrolled) < 1) {
                    inProgress = true;
                    if (typeof queryR === "undefined" || queryR === "") {
                        lazyLoadAll(selectedType, pageIndex);
                    } else {
                        lazyLoadAll(selectedType, pageIndex, queryR);
                    }
                    pageIndex = pageIndex + 1;

                }
            });

            if (typeof queryR === "undefined" || queryR === "") {
                lazyLoadAll(selectedType, pageIndex);
            } else {
                lazyLoadAll(selectedType, pageIndex, queryR);
            }

        });

    </script>

}


